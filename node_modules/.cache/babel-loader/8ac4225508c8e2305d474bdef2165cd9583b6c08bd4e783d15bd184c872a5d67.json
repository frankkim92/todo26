{"ast":null,"code":"var _jsxFileName = \"/Users/frank/Desktop/3\\u110E\\u1161\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/semiclonetodo/semiclonetodo/src/components/Main.jsx\",\n  _s = $RefreshSig$();\n// TodoTemplate\n\nimport React, { useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport \"./Main.css\";\nimport Input from \"./Input\";\nimport { IoSettingsSharp } from \"react-icons/io5\";\nimport TodoInsert from \"./TodoInsert\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [insertToggle, setInsertToggle] = useState(false);\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: \"머리감기\",\n    checked: false\n  }, {\n    id: 2,\n    text: \"노트북 부시기\",\n    checked: true\n  }, {\n    id: 3,\n    text: \"키보드 샷건치기\",\n    checked: true\n  }]);\n  const onInsertToggle = () => {\n    setInsertToggle(prev => !prev);\n  };\n  const onInsertTodo = () => {\n    if (text === \"\") {\n      return alert(\"할 일이 없습니다.\");\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [\"\\uC624\\uB298\\uC758 \\uD560\\uC77C \", todos.length, \" \\uAC74\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-button\",\n      onClick: onInsertToggle,\n      children: /*#__PURE__*/_jsxDEV(IoSettingsSharp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), insertToggle ? /*#__PURE__*/_jsxDEV(TodoInsert, {\n      onInsertToggle: onInsertToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this) : \"\"]\n  }, void 0, true);\n};\n_s(Main, \"X6H3ZWUA+SssTJY7RGnkpRl9HzQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","TodoList","Input","IoSettingsSharp","TodoInsert","Main","insertToggle","setInsertToggle","todos","setTodos","id","text","checked","onInsertToggle","prev","onInsertTodo","alert","length"],"sources":["/Users/frank/Desktop/3차프로젝트/semiclonetodo/semiclonetodo/src/components/Main.jsx"],"sourcesContent":["// TodoTemplate\n\nimport React, { useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport \"./Main.css\";\nimport Input from \"./Input\";\nimport { IoSettingsSharp } from \"react-icons/io5\";\nimport TodoInsert from \"./TodoInsert\";\n\nconst Main = () => {\n  const [insertToggle, setInsertToggle] = useState(false);\n\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: \"머리감기\",\n      checked: false,\n    },\n    {\n      id: 2,\n      text: \"노트북 부시기\",\n      checked: true,\n    },\n    {\n      id: 3,\n      text: \"키보드 샷건치기\",\n      checked: true,\n    },\n  ]);\n\n  const onInsertToggle = () => {\n    setInsertToggle((prev) => !prev);\n  };\n\n  const onInsertTodo = () => {\n    if (text === \"\") {\n      return alert(\"할 일이 없습니다.\");\n    } else {\n    }\n  };\n\n  return (\n    <>\n      <div className=\"title\">오늘의 할일 {todos.length} 건</div>\n      {/* <Input setTodos={setTodos} /> */}\n      <TodoList todos={todos} />\n\n      {/* 모달창버튼 */}\n      <div className=\"add-todo-button\" onClick={onInsertToggle}>\n        {/*모달창 아이콘 */}\n        <IoSettingsSharp />\n      </div>\n      {/* 모달창 동작 함수 */}\n      {insertToggle ? <TodoInsert onInsertToggle={onInsertToggle} /> : \"\"}\n    </>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,UAAU,MAAM,cAAc;AAAC;AAAA;AAEtC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CACjC;IACEU,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EAEF,MAAMC,cAAc,GAAG,MAAM;IAC3BN,eAAe,CAAEO,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAIJ,IAAI,KAAK,EAAE,EAAE;MACf,OAAOK,KAAK,CAAC,YAAY,CAAC;IAC5B,CAAC,MAAM,CACP;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,OAAO;MAAA,WAAC,kCAAO,EAACR,KAAK,CAACS,MAAM,EAAC,SAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAEpD,QAAC,QAAQ;MAAC,KAAK,EAAET;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAG1B;MAAK,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAEK,cAAe;MAAA,uBAEvD,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACf,EAELP,YAAY,gBAAG,QAAC,UAAU;MAAC,cAAc,EAAEO;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG,EAAE;EAAA,gBAClE;AAEP,CAAC;AAAC,GA/CIR,IAAI;AAAA,KAAJA,IAAI;AAiDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}