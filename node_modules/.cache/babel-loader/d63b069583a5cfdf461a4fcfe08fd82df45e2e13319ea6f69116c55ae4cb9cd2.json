{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst todos = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    initTodo: (state, action) => {\n      // action.payload에는 jason 서버의 todos가 담겨있음\n      return state = action.payload;\n    }\n  }\n});\n\n// 액션크리에이터는 컴포넌트에서 사용하기 위해 export 하고\nexport const {\n  initTodo\n} = todos.actions;\n// reducer 는 configStore에 등록하기 위해 export default 합니다.\nexport default todos.reducer;\n\n// 만약 리덕스를 사용하면 삭제나 수정을 요청하면, 내가 수동으로 프론트에서 들고있는 데이터를 삭제하고 다시 useSTate에 넣고 리랜더링을 시켜야함","map":{"version":3,"names":["createSlice","initialState","todos","name","reducers","initTodo","state","action","payload","actions","reducer"],"sources":["/Users/frank/Desktop/3차프로젝트/Todolist ver 2/semiclonetodo 복사본/semiclonetodo/src/redux/modules/todos.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst todos = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    initTodo: (state, action) => {\n      // action.payload에는 jason 서버의 todos가 담겨있음\n      return (state = action.payload);\n    },\n  },\n});\n\n// 액션크리에이터는 컴포넌트에서 사용하기 위해 export 하고\nexport const { initTodo } = todos.actions;\n// reducer 는 configStore에 등록하기 위해 export default 합니다.\nexport default todos.reducer;\n\n// 만약 리덕스를 사용하면 삭제나 수정을 요청하면, 내가 수동으로 프론트에서 들고있는 데이터를 삭제하고 다시 useSTate에 넣고 리랜더링을 시켜야함\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B;MACA,OAAQD,KAAK,GAAGC,MAAM,CAACC,OAAO;IAChC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGH,KAAK,CAACO,OAAO;AACzC;AACA,eAAeP,KAAK,CAACQ,OAAO;;AAE5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}