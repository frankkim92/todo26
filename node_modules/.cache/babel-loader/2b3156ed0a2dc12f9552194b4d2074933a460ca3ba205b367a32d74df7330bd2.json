{"ast":null,"code":"var _jsxFileName = \"/Users/frank/Desktop/3\\u110E\\u1161\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/semiclonetodo/semiclonetodo/src/components/TodoList.jsx\";\nimport React from \"react\";\nimport Comment from \"./Comment\";\nimport Input from \"./Input\";\nimport TodoItem from \"./TodoItem\";\n\n// 여긴 투두리스트 본진\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    todo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","Comment","Input","TodoItem","TodoList","todo"],"sources":["/Users/frank/Desktop/3차프로젝트/semiclonetodo/semiclonetodo/src/components/TodoList.jsx"],"sourcesContent":["import React from \"react\";\nimport Comment from \"./Comment\";\nimport Input from \"./Input\";\nimport TodoItem from \"./TodoItem\";\n\n// 여긴 투두리스트 본진\nconst TodoList = ({ todo }) => {\n  return (\n    <>\n      <Input />\n      <TodoItem todo={todo} />\n      <Comment />\n    </>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AAAA;AAAA;AACA,MAAMC,QAAQ,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACxB,oBACE;IAAA,wBACE,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACT,QAAC,QAAQ;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACxB,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACV;AAEP,CAAC;AAAC,KARID,QAAQ;AAUd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}