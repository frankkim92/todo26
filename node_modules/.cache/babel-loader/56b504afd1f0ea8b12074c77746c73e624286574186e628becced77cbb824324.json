{"ast":null,"code":"var _jsxFileName = \"/Users/frank/Desktop/3\\u110E\\u1161\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/Todolist ver 2/semiclonetodo \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/semiclonetodo/src/components/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    todo,\n    deleteTodo,\n    editTodo\n  } = _ref;\n  // const { id, isDone, todoTitle } = todo; 구조분해할당\n\n  const [editOpen, setEditOpen] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // 수정이라는 버튼을 눌렀을 떄 실행이 되는 함수\n  const startEdit = () => {\n    setEditOpen(true);\n    // 기존에 있던 애를 고대로 담아놔라\n    setInputValue(todo.todoTitle);\n  };\n  const onChangeInputValue = e => {\n    setInputValue(e.target.value);\n  };\n\n  // 확인 버튼을 누르면 endEdit이 실행되어라\n  const endEdit = () => {\n    const data = {\n      todoTitle: inputValue\n    };\n    // 내가 컨트롤하고 있는 id와 데이터를 보낼건데, axios patch 특성\n    editTodo(todo.id, data);\n    setEditOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: todo.todoTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), editOpen && /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: onChangeInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this), editOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endEdit,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEdit,\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        deleteTodo(todo.id);\n      },\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"VGKBxOxz01P+3yYaZjNhBpnOjcU=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","Todo","todo","deleteTodo","editTodo","editOpen","setEditOpen","inputValue","setInputValue","startEdit","todoTitle","onChangeInputValue","e","target","value","endEdit","data","id"],"sources":["/Users/frank/Desktop/3차프로젝트/Todolist ver 2/semiclonetodo 복사본/semiclonetodo/src/components/Todo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Todo = ({ todo, deleteTodo, editTodo }) => {\n  // const { id, isDone, todoTitle } = todo; 구조분해할당\n\n  const [editOpen, setEditOpen] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // 수정이라는 버튼을 눌렀을 떄 실행이 되는 함수\n  const startEdit = () => {\n    setEditOpen(true);\n    // 기존에 있던 애를 고대로 담아놔라\n    setInputValue(todo.todoTitle);\n  };\n\n  const onChangeInputValue = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  // 확인 버튼을 누르면 endEdit이 실행되어라\n  const endEdit = () => {\n    const data = {\n      todoTitle: inputValue,\n    };\n    // 내가 컨트롤하고 있는 id와 데이터를 보낼건데, axios patch 특성\n    editTodo(todo.id, data);\n    setEditOpen(false);\n  };\n\n  return (\n    <div>\n      <h3>{todo.todoTitle}</h3>\n      {/* <p>{todo.isDone.toString()}</p> */}\n      {/* eidtopen 이라는 변수가 true면 오른쪽 걸 실행해라 */}\n      {editOpen && <input value={inputValue} onChange={onChangeInputValue} />}\n\n      {editOpen ? (\n        <button onClick={endEdit}>확인</button>\n      ) : (\n        <button onClick={startEdit}>수정</button>\n      )}\n      <button\n        onClick={() => {\n          deleteTodo(todo.id);\n        }}\n      >\n        삭제\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,IAAI,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAS,CAAC;EAC1C;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,SAAS,GAAG,MAAM;IACtBH,WAAW,CAAC,IAAI,CAAC;IACjB;IACAE,aAAa,CAACN,IAAI,CAACQ,SAAS,CAAC;EAC/B,CAAC;EAED,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChCJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,MAAM;IACpB,MAAMC,IAAI,GAAG;MACXN,SAAS,EAAEH;IACb,CAAC;IACD;IACAH,QAAQ,CAACF,IAAI,CAACe,EAAE,EAAED,IAAI,CAAC;IACvBV,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAKJ,IAAI,CAACQ;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM,EAGxBL,QAAQ,iBAAI;MAAO,KAAK,EAAEE,UAAW;MAAC,QAAQ,EAAEI;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAG,EAEtEN,QAAQ,gBACP;MAAQ,OAAO,EAAEU,OAAQ;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,gBAErC;MAAQ,OAAO,EAAEN,SAAU;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/B,eACD;MACE,OAAO,EAAE,MAAM;QACbN,UAAU,CAACD,IAAI,CAACe,EAAE,CAAC;MACrB,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GAhDIhB,IAAI;AAAA,KAAJA,IAAI;AAkDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}