{"ast":null,"code":"var _jsxFileName = \"/Users/frank/Desktop/3\\u110E\\u1161\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/Todolist ver 2/semiclonetodo \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/semiclonetodo/src/components/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Input from \"./Input\";\nimport { initTodo } from \"../redux/modules/todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios\n    // get으로 저 경로로 요청을 보내는거야.\n    .get(\"http://localhost:3001/todos\")\n    // 여기서 response이 우리가 원하는 값이 들어옴\n    .then(response => dispatch(initTodo(response.data))).catch(error => console.log(error));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["axios","React","useEffect","useDispatch","Input","initTodo","TodoList","dispatch","get","then","response","data","catch","error","console","log"],"sources":["/Users/frank/Desktop/3차프로젝트/Todolist ver 2/semiclonetodo 복사본/semiclonetodo/src/components/TodoList.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Input from \"./Input\";\nimport { initTodo } from \"../redux/modules/todos\";\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios\n      // get으로 저 경로로 요청을 보내는거야.\n      .get(\"http://localhost:3001/todos\")\n      // 여기서 response이 우리가 원하는 값이 들어옴\n      .then((response) => dispatch(initTodo(response.data)))\n      .catch((error) => console.log(error));\n  }, [dispatch]);\n  return (\n    <div>\n      <Input />\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,wBAAwB;AAAC;AAClD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9BD,SAAS,CAAC,MAAM;IACdF;IACE;IAAA,CACCQ,GAAG,CAAC,6BAA6B;IAClC;IAAA,CACCC,IAAI,CAAEC,QAAQ,IAAKH,QAAQ,CAACF,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACrDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EACd,oBACE;IAAA,uBACE,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GAfID,QAAQ;EAAA,QACKH,WAAW;AAAA;AAAA,KADxBG,QAAQ;AAiBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}